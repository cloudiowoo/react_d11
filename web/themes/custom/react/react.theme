<?php

/**
 * @file
 * Functions to support theming.
 */

/**
 * Implements hook_preprocess_image_widget().
 */
function react_preprocess_image_widget(array &$variables): void
{
  $data = &$variables['data'];

  // This prevents image widget templates from rendering preview container HTML
  // to users that do not have permission to access these previews.
  // @todo revisit in https://drupal.org/node/953034
  // @todo revisit in https://drupal.org/node/3114318
  if (isset($data['preview']['#access']) && $data['preview']['#access'] === FALSE) {
    unset($data['preview']);
  }
}

/**
 * Implements hook_theme_suggestions_html_alter().
 */
function react_theme_suggestions_html_alter(array &$suggestions, array $variables)
{
  // 获取当前节点
  $node = \Drupal::routeMatch()->getParameter('node');

  if ($node) {
    // 确保我们有节点对象
    if (is_numeric($node)) {
      $node = \Drupal\node\Entity\Node::load($node);
    }

    if ($node) {
      // 添加基于内容类型的建议
      $content_type = $node->bundle();
      $suggestions[] = 'html__' . $content_type;

      // 为了调试，显示当前的建议
      \Drupal::logger('react_theme')->info('HTML Content type: @type, HTML Suggestions: @suggestions', [
        '@type' => $content_type,
        '@suggestions' => implode(', ', $suggestions)
      ]);
    }
  }

  // 保留路径别名建议逻辑
  $current_path = \Drupal::service('path.current')->getPath();
  $alias = \Drupal::service('path_alias.manager')->getAliasByPath($current_path);

  $path_alias = trim($alias, '/');
  if (!empty($path_alias)) {
    $path_parts = explode("/", $path_alias);
    $template_filename = 'html';

    foreach ($path_parts as $path_part) {
      $template_filename .= '__' . str_replace('-', '_', $path_part);
      $suggestions[] = $template_filename;
    }
  }
}

/**
 * Implements hook_theme_suggestions_page_alter().
 */
function react_theme_suggestions_page_alter(array &$suggestions, array $variables)
{
  // 获取当前节点
  $node = \Drupal::routeMatch()->getParameter('node');

  if ($node) {
    // 确保我们有节点对象
    if (is_numeric($node)) {
      $node = \Drupal\node\Entity\Node::load($node);
    }

    if ($node) {
      // 添加基于内容类型的建议
      $content_type = $node->bundle();
      $suggestions[] = 'page__' . $content_type;

      // 为了调试，显示当前的建议
      \Drupal::logger('react_theme')->info('Content type: @type, Suggestions: @suggestions', [
        '@type' => $content_type,
        '@suggestions' => implode(', ', $suggestions)
      ]);
    }
  }

  // 保留原有的路径别名建议逻辑（但不覆盖现有建议）
  $current_path = \Drupal::service('path.current')->getPath();
  $alias = \Drupal::service('path_alias.manager')->getAliasByPath($current_path);

  $path_alias = trim($alias, '/');
  if (!empty($path_alias)) {
    $path_parts = explode("/", $path_alias);
    $template_filename = 'page';

    foreach ($path_parts as $path_part) {
      $template_filename .= '__' . str_replace('-', '_', $path_part);
      $suggestions[] = $template_filename;
    }
  }
}